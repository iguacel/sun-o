{"version":3,"sources":["hooks/useInterval.js","components/GeoLocation.js","components/Header.js","hooks/useMousePositionCoords.js","components/MapTooltip.js","components/MapTzLayer.js","components/MapBgLayer.js","components/Map.js","utils/getDistance.js","components/Location.js","hooks/usePrev.js","components/ChartTooltip.js","utils/utils.js","components/Clock.js","components/Timeline.js","components/Radar.js","components/SunInfo.js","components/Footer.js","utils/random.js","utils/testCoords.js","utils/time.js","components/Debug.js","components/Debug2.js","components/DebugInfo.js","utils/phaseData.js","utils/getTimes.js","App.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","GeoLocation","setLocation","useState","geoLocationMssg","setGeoLocationMssg","className","style","padding","onClick","e","preventDefault","navigator","geolocation","getCurrentPosition","position","latitude","coords","toFixed","longitude","lat","lng","getLocation","Header","zIndex","display","width","fontSize","flex","fontWeight","marginLeft","canHover","window","matchMedia","matches","initialState","x","y","pageX","pageY","clientX","clientY","screenX","screenY","elementWidth","elementHeight","isOver","tz","useMousePosition","enterDelay","leaveDelay","fps","location","state","setState","entered","element","setElement","timeout","amt","fn","clearTimeout","setTimeout","onMove_","useCallback","rect","getBoundingClientRect","latScale","scaleLinear","domain","height","range","clamp","lngScale","left","pageXOffset","scrollX","top","pageYOffset","scrollY","tzlookup","onMove","useThrottleCallback","onEnter","onLeave","addEventListener","undefined","removeEventListener","MapTooltip","ide","mousePosition","date","ReactTooltip","rebuild","type","getContent","dataTip","textAlign","userSelect","textTransform","letterSpacing","split","replace","format","margin","borderBottom","paddingBottom","world","topojson","topology","objects","units","Map","ref","projection","geoEquirectangular","centerX","centerY","scale","moment","latScaleInverse","lngScaleInverse","locationNow","sun","now","Date","day","setUTCHours","t","solar","offsets","offset","color","light","terminator","geoCircle","radius","center","antipode","cursor","select","xmlns","version","viewBox","xmlSpace","overflow","CustomProjection","data","features","translate","customProjection","map","mixBlendMode","isolation","key","d","path","fill","data-for","data-tip","pointerEvents","cx","cy","r","x1","y1","x2","y2","stroke","strokeWidth","React","memo","events","background","Graticule","graticule","g","feature","i","right","bottom","MapTzLayer","rad","Math","PI","getKm","n","getMiles","Location","sunTimes","prevLocation","value","usePrev","distance","p1","p2","miles","R","dLat","dLong","a","sin","cos","c","atan2","sqrt","getDistance","lineHeight","toLocaleString","ChartTooltip","string","selected","JSON","parse","content","borderRadius","marginRight","name","from","charAt","toUpperCase","slice","to","duration","humanize","Clock","radar","currentPhase","bg","maxWidth","Timeline","useMeasure","scroll","polyfill","bounds","hourScale","scaleTime","start","end","horasScale","year","month","hour","hours","useMemo","items","Array","forEach","acc","index","push","phases","Line","stringify","marginTop","textAnchor","LinePath","Polygon","sides","size","rotate","reSize","s","isFinite","points","length","step","_","genPoints","flexDirection","alignItems","justifyContent","Group","Arc","startAngle","endAngle","innerRadius","outerRadius","solarNoon","strokeLinecap","strokeDasharray","opacity","dominantBaseline","dy","Info","isTimeline","setIsTimeline","daylength","next","nextSun","nextPhase","times","filter","Footer","props","href","target","rel","title","getFullYear","getRandomInt","fixed","random","randomMomentDate","String","padStart","getRandomLng","getRandomLat","testCoords","cadiz","pamplona","nyc","london","oslo","yuma","rjukan","jaca","china","alaska","toHoursMinutes","utc","minutes","Debug","colSpan","polarNight","midnightSun","DebugInfo","setDate","onChange","event","Object","entries","Debug2","phasesId","start_astronomicalDawn","astronomicalDawn_nauticalDawn","nauticalDawn_civilDawn","civilDawn_sunrise","sunrise_sunset","sunset_civilDusk","civilDusk_nauticalDusk","nauticalDusk_astronomicalDusk","astronomicalDusk_end","unico_polarNight","unico_midnightSun","start_sunrise","sunset_end","start_civilDawn","civilDusk_end","start_nauticalDawn","nauticalDusk_end","astronomicalDawn_astronomicalDusk","nauticalDawn_nauticalDusk","civilDawn_civilDusk","getDaylength","sunriseDate","sunrise","sunsetDate","sunset","isAfter","diff","nextDuration","getCurrentPhase","currentPhaseIndex","findIndex","getSunTimes","tzB","sn","startOf","endOf","timesFiltered","civilDawn","civilDusk","nauticalDawn","nauticalDusk","astronomicalDawn","astronomicalDusk","isValid","sort","b","timesLength","phaseData","isBetween","concat","getPhases","debug","App","add","Radar","SunInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.234420d9.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, { useState } from \"react\";\n\nconst GeoLocation = ({ setLocation }) => {\n  const [geoLocationMssg, setGeoLocationMssg] = useState(false);\n\n  const getLocation = e => {\n    e.preventDefault();\n\n    if (!navigator.geolocation) {\n      setGeoLocationMssg(\"Geolocation N/A ✗\");\n      return;\n    }\n\n    const success = position => {\n      const latitude = +position.coords.latitude.toFixed(4);\n      const longitude = +position.coords.longitude.toFixed(4);\n\n      setLocation({ lat: latitude, lng: longitude });\n\n      setGeoLocationMssg(\"Geolocation ✓\");\n    };\n\n    const error = () => {\n      setGeoLocationMssg(\"Geolocation N/A ✗\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n  };\n\n  return (\n    <div className=\"pm max\">\n      <button\n        className={`${!geoLocationMssg ? \"pulseButton\" : \"\"} pm small`}\n        style={{\n          padding: \"0.5em 0.7em 0.5em 0.7em\"\n        }}\n        onClick={e => getLocation(e)}\n      >\n        {geoLocationMssg ? geoLocationMssg : \"Geolocation\"}\n      </button>\n    </div>\n  );\n};\n\nexport default GeoLocation;\n","import React from \"react\";\nimport GeoLocation from \"./GeoLocation\";\n\nfunction Header({ setLocation }) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        zIndex: 1,\n        display: \"flex\",\n        width: \"100%\"\n      }}\n    >\n      <h1\n        className=\"pm\"\n        style={{\n          fontSize: \"130%\",\n          flex: 1,\n          padding: \"1em 0.5em 0.5em 0.5em\",\n          fontWeight: 600,\n          marginLeft: \"0.3em\"\n        }}\n      >\n        sun <span style={{ fontSize: \"80%\" }}>●</span>)))\n      </h1>\n\n      <GeoLocation setLocation={setLocation} />\n    </div>\n  );\n}\n\nexport default Header;\n","import { useState, useRef, useCallback, useEffect } from \"react\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\nimport { scaleLinear } from \"d3-scale\";\nimport tzlookup from \"tz-lookup\";\n\nexport const canHover = () =>\n  typeof window !== \"undefined\"\n    ? !window.matchMedia(\"(hover: none)\").matches\n    : false;\n\nconst initialState = {\n  x: null,\n  y: null,\n  pageX: null,\n  pageY: null,\n  clientX: null,\n  clientY: null,\n  screenX: null,\n  screenY: null,\n  elementWidth: null,\n  elementHeight: null,\n  isOver: false,\n  lat: null,\n  lng: null,\n  tz: null\n};\n\nexport const useMousePosition = (\n  enterDelay = 0,\n  leaveDelay = 0,\n  fps = 30,\n  location\n) => {\n  const [state, setState] = useState({ ...initialState, ...location }),\n    entered = useRef(false),\n    [element, setElement] = useState(null),\n    timeout = useRef();\n\n  const delay = (amt, fn) => {\n    if (!canHover()) return;\n\n    timeout.current && window.clearTimeout(timeout.current);\n\n    if (amt) {\n      timeout.current = window.setTimeout(fn, amt);\n    } else {\n      fn();\n    }\n  };\n\n  const onMove_ = useCallback(\n    e => {\n      if (!canHover() || !entered.current || !element) return;\n\n      const { clientX, clientY, screenX, screenY, pageX = 0, pageY = 0 } = e,\n        rect = element.getBoundingClientRect();\n\n      const latScale = scaleLinear()\n        .domain([0, rect.height])\n        .range([90, -90])\n        .clamp(true);\n\n      const lngScale = scaleLinear()\n        .domain([0, rect.width])\n        .range([-180, 180])\n        .clamp(true);\n\n      const x = pageX - rect.left - (window.pageXOffset || window.scrollX);\n      const y = pageY - rect.top - (window.pageYOffset || window.scrollY);\n\n      const lat = +latScale(y).toFixed(4);\n      const lng = +lngScale(x).toFixed(4);\n\n      const tz = tzlookup(latScale(y), lngScale(x));\n\n      setState({\n        x,\n        y,\n        pageX,\n        pageY,\n        clientX,\n        clientY,\n        screenX,\n        screenY,\n        elementWidth: rect.width,\n        elementHeight: rect.height,\n        lat,\n        lng,\n        tz,\n        isOver: true\n      });\n    },\n    [element]\n  );\n\n  const onMove = useThrottleCallback(onMove_, fps, true);\n\n  useEffect(() => {\n    if (element !== null) {\n      const onEnter = e => {\n        delay(enterDelay, () => {\n          entered.current = true;\n          onMove(e);\n        });\n      };\n      const onLeave = () => {\n        delay(leaveDelay, () => {\n          entered.current = false;\n          setState(initialState);\n        });\n      };\n\n      element.addEventListener(\"mouseenter\", onEnter);\n      element.addEventListener(\"mousemove\", onMove);\n      element.addEventListener(\"mouseleave\", onLeave);\n\n      return () => {\n        timeout.current !== null && window.clearTimeout(timeout.current);\n        timeout.current = undefined;\n\n        if (element !== null) {\n          element.removeEventListener(\"mouseenter\", onEnter);\n          element.removeEventListener(\"mousemove\", onMove);\n          element.removeEventListener(\"mouseleave\", onLeave);\n        }\n      };\n    }\n  }, [element, enterDelay, leaveDelay, onMove]);\n\n  return [state, setElement];\n};\n\nexport default useMousePosition;\n","import React, { useEffect } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst MapTooltip = ({ ide, mousePosition, date }) => {\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  });\n\n  return (\n    mousePosition &&\n    mousePosition.x && (\n      <ReactTooltip\n        id={`tooltip-${ide}`}\n        type=\"light\"\n        className=\"tooltip-radial\"\n        getContent={dataTip => {\n          return (\n            <div\n              style={{\n                textAlign: \"center\",\n                width: \"120px\",\n                userSelect: \"none\"\n              }}\n            >\n              <p className=\"hug2\">\n                <span\n                  style={{\n                    textTransform: \"uppercase\",\n                    letterSpacing: \"0.07em\"\n                  }}\n                >\n                  {mousePosition &&\n                    mousePosition.tz &&\n                    mousePosition.tz.split(\"/\")[0]}\n                </span>\n                <br />\n                <span className=\"hug bold\">\n                  {mousePosition &&\n                    mousePosition.tz &&\n                    mousePosition.tz.split(\"/\")[1].replace(\"_\", \" \")}\n                </span>\n              </p>\n              <br />\n\n              <h4 className=\"xlarge hug pm\" style={{ fontWeight: 600 }}>\n                {mousePosition &&\n                  mousePosition.tz &&\n                  date\n                    .tz(mousePosition.tz)\n                    .format(\"HH\")\n                    .split(\"/\")[0]}\n\n                <span className=\"timeDots\">:</span>\n\n                {mousePosition &&\n                  mousePosition.tz &&\n                  date\n                    .tz(mousePosition.tz)\n                    .format(\"mm\")\n                    .split(\"/\")[0]}\n              </h4>\n\n              <p className=\"pm hug\" style={{ padding: 0, margin: 0 }}>\n                {mousePosition &&\n                  mousePosition.tz &&\n                  date.tz(mousePosition.tz).format(\"MMM Do\")}\n              </p>\n              <br />\n\n              <p\n                style={{\n                  borderBottom: \"1px solid RGBA(205, 206, 207, 1.00)\",\n                  textAlign: \"left\"\n                }}\n                className=\"pm\"\n              >\n                <strong\n                  style={{\n                    display: \"inline-block\",\n                    width: \"42px\"\n                  }}\n                >\n                  Lat:{\" \"}\n                </strong>\n                {mousePosition.lat}\n              </p>\n              <p\n                style={{\n                  paddingBottom: \"0.2em\",\n                  textAlign: \"left\"\n                }}\n                className=\"pm hug2\"\n              >\n                <strong\n                  style={{\n                    display: \"inline-block\",\n                    width: \"42px\"\n                  }}\n                >\n                  Lng:{\" \"}\n                </strong>\n                {mousePosition.lng}\n              </p>\n            </div>\n          );\n        }}\n      />\n    )\n  );\n};\n\nexport default MapTooltip;\n","import React from \"react\";\nimport * as topojson from \"topojson-client\";\n\nimport { CustomProjection } from \"@vx/geo\";\n\nimport useMousePosition from \"../hooks/useMousePositionCoords\";\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nimport { scaleLinear } from \"d3-scale\";\nimport { geoCircle, geoEquirectangular } from \"d3-geo\";\n\nimport * as solar from \"solar-calculator\";\n\nimport topology from \"../maps/world-110-simplified-min\";\nimport MapTooltip from \"./MapTooltip\";\n\nconst world = topojson.feature(topology, topology.objects.units);\n\nconst Map = ({\n  width = 942.6,\n  height = 471.8,\n  location,\n  setLocation,\n  ide = \"map\"\n}) => {\n  const [mousePosition, ref] = useMousePosition(\n    0, // enterDelay\n    0, // leaveDelay\n    30, // fps,\n    location // location\n  );\n\n  let projection = geoEquirectangular;\n\n  const scaleFactor = 630;\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const scale = (width / scaleFactor) * 100;\n\n  const date = moment();\n\n  const latScaleInverse = scaleLinear()\n    .domain([90, -90])\n    .range([0, height])\n    .clamp(true);\n\n  const lngScaleInverse = scaleLinear()\n    .domain([-180, 180])\n    .range([0, width])\n    .clamp(true);\n\n  const locationNow = {\n    lat: latScaleInverse(location.lat),\n    lng: lngScaleInverse(location.lng)\n  };\n\n  const sun = () => {\n    const now = new Date();\n    const day = new Date(+now).setUTCHours(0, 0, 0, 0);\n    const t = solar.century(now);\n    const longitude = ((day - now) / 864e5) * 360 - 180;\n    return [longitude - solar.equationOfTime(t) / 4, solar.declination(t)];\n  };\n\n  const antipode = ([longitude, latitude]) => {\n    return [longitude + 180, -latitude];\n  };\n\n  const offsets = [\n    { id: \"night\", offset: 18, color: \"RGBA(37, 75, 138, 0.50)\" },\n    {\n      id: \"astronomicalTwilight\",\n      offset: 12,\n      color: \"RGBA(37, 75, 138, 0.50)\"\n    },\n    { id: \"nauticalTwilight\", offset: 6, color: \"RGBA(37, 75, 138, 0.30)\" },\n    { id: \"civilTwilight\", offset: 0, color: \"RGBA(37, 75, 138, 0.20)\" }\n  ];\n\n  const light = [\n    { id: \"night\", offset: 0, color: \"RGBA(251, 244, 193, 0.50)\" }\n  ];\n\n  const terminator = offset => {\n    return geoCircle()\n      .radius(90 - offset)\n      .center(antipode(sun()))();\n  };\n\n  const terminatorLight = offset => {\n    return geoCircle()\n      .radius(90 - offset)\n      .center(sun())();\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        height: \"auto\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        select: \"none\"\n      }}\n    >\n      <MapTooltip\n        type=\"light\"\n        ide={ide}\n        mousePosition={mousePosition}\n        date={date}\n      />\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        id=\"Layer_1\"\n        x=\"0\"\n        y=\"0\"\n        version=\"1.1\"\n        viewBox=\"0 0 942.6 471.8\"\n        xmlSpace=\"preserve\"\n        style={{ overflow: \"visible\" }}\n      >\n        {/* NIGHT */}\n        <CustomProjection\n          projection={projection}\n          data={world.features}\n          scale={scale}\n          translate={[centerX, centerY]}\n        >\n          {customProjection => {\n            return (\n              <g>\n                <g>\n                  {/* NIGHT PATH */}\n                  {light.map(x => {\n                    return (\n                      <path\n                        style={{\n                          mixBlendMode: \"multiply\",\n                          isolation: \"isolate\"\n                        }}\n                        key={`twilight-${x.id}`}\n                        d={customProjection.path(terminatorLight(x.offset))}\n                        fill={x.color}\n                      />\n                    );\n                  })}\n                </g>\n                {/* NIGHT PATH */}\n                {offsets.map(x => {\n                  return (\n                    <path\n                      style={{ mixBlendMode: \"multiply\", isolation: \"isolate\" }}\n                      key={`twilight-${x.id}`}\n                      d={customProjection.path(terminator(x.offset))}\n                      fill={x.color}\n                    />\n                  );\n                })}\n              </g>\n            );\n          }}\n        </CustomProjection>\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={width}\n          height={height}\n          data-for={`tooltip-${ide}`}\n          data-tip={\"Map\"}\n          type=\"light\"\n          fill=\"transparent\"\n          onClick={() =>\n            mousePosition.tz &&\n            setLocation({ lat: mousePosition.lat, lng: mousePosition.lng })\n          }\n        />\n\n        <circle\n          className=\"circleNow\"\n          style={{\n            pointerEvents: \"none\"\n          }}\n          cx={locationNow.lng}\n          cy={locationNow.lat}\n          r={30}\n          fill=\"transparent\"\n        />\n\n        <line\n          x1={locationNow.lng}\n          y1={-500}\n          x2={locationNow.lng}\n          y2={height}\n          style={{\n            stroke: \"RGBA(245, 184, 69, 1)\",\n            pointerEvents: \"none\",\n            strokeWidth: 1.5\n          }}\n        />\n        <line\n          x1={0}\n          y1={locationNow.lat}\n          x2={width}\n          y2={locationNow.lat}\n          style={{\n            stroke: \"RGBA(245, 184, 69, 1)\",\n            pointerEvents: \"none\",\n            strokeWidth: 1.5\n          }}\n        />\n        <circle\n          className=\"circle\"\n          style={{\n            pointerEvents: \"none\"\n          }}\n          cx={locationNow.lng}\n          cy={locationNow.lat}\n          r={4}\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport * as topojson from \"topojson-client\";\nimport { CustomProjection, Graticule } from \"@vx/geo\";\n\nimport { geoEquirectangular } from \"d3-geo\";\n\nimport topology from \"../maps/world-110-simplified-min\";\nconst world = topojson.feature(topology, topology.objects.units);\n\nfunction MapBgLayer({ width = 942.6, height = 471.8, events = false }) {\n  let projection = geoEquirectangular;\n\n  const scaleFactor = 630;\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const scale = (width / scaleFactor) * 100;\n\n  return (\n    <div style={{ background: \"white\" }}>\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`}>\n        <CustomProjection\n          projection={projection}\n          data={world.features}\n          scale={scale}\n          translate={[centerX, centerY]}\n        >\n          {customProjection => {\n            return (\n              <g>\n                <Graticule\n                  graticule={g => customProjection.path(g)}\n                  stroke=\"RGBA(105, 106, 207, 0.10)\"\n                />\n                {customProjection.features.map((feature, i) => {\n                  return (\n                    <path\n                      key={`map-${i}`}\n                      d={feature.path}\n                      fill=\"RGBA(33, 38, 43, 1.00)\"\n                      stroke=\"white\"\n                      strokeWidth={0.5}\n                    />\n                  );\n                })}\n              </g>\n            );\n          }}\n        </CustomProjection>\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(MapBgLayer);\n","import React from \"react\";\n\nimport MapTzLayer from \"./MapTzLayer\";\nimport MapBgLayer from \"./MapBgLayer\";\n\nfunction Map({ location, setLocation }) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        cursor: \"pointer\"\n      }}\n    >\n      <div\n        style={{ position: \"absolute\", top: 0, right: 0, left: 0, bottom: 0 }}\n      >\n        <MapTzLayer location={location} setLocation={setLocation} />\n      </div>\n\n      <MapBgLayer />\n    </div>\n  );\n}\n\nexport default Map;\n","export const rad = x => {\n  return (x * Math.PI) / 180;\n};\n\nexport const getDistance = (p1, p2, miles = false) => {\n  var R = 6378137; // Earth’s mean radius in meter\n  var dLat = rad(p2.lat - p1.lat);\n  var dLong = rad(p2.lng - p1.lng);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(rad(p1.lat)) *\n      Math.cos(rad(p2.lat)) *\n      Math.sin(dLong / 2) *\n      Math.sin(dLong / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  if (miles) {\n    return getMiles(d);\n  }\n  return getKm(d); // returns the distance in meter\n};\n\nexport const getKm = n => +(n / 1000).toFixed(2);\n\nexport const getMiles = n => +(n / 1600).toFixed(2);\n","import React from \"react\";\nimport { getDistance } from \"../utils/getDistance\";\nimport usePrev from \"../hooks/usePrev\";\n\nconst Location = ({ sunTimes, location }) => {\n  // PrevLocation\n  const prevLocation = usePrev(location);\n\n  // Distancia\n  const distance = prevLocation && getDistance(location, prevLocation);\n\n  // Render\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        padding: \"1em\"\n      }}\n      className=\"dayWrapper center\"\n    >\n      <p\n        className=\"pm hug\"\n        style={{\n          fontSize: \"90%\",\n          lineHeight: \"1.4em\"\n        }}\n      >\n        <span\n          style={{\n            fontSize: \"95%\",\n            textTransform: \"uppercase\",\n            letterSpacing: \"0.07em\"\n          }}\n        >\n          {sunTimes && sunTimes.tz && sunTimes.tz.split(\"/\")[0]}\n        </span>\n        <span style={{ color: \"RGBA(233, 233, 234, 1.00)\" }}> {\" | \"}</span>\n\n        <strong>\n          {sunTimes &&\n            sunTimes.tz &&\n            sunTimes.tz.split(\"/\")[1].replace(\"_\", \" \")}\n        </strong>\n      </p>\n\n      <h5 className=\"pm small\">\n        {distance && distance !== 0\n          ? \"Distance traveled: \" + distance.toLocaleString() + \" km\"\n          : \"Click on the map\"}\n      </h5>\n    </div>\n  );\n};\n\nexport default Location;\n","import { useRef, useEffect } from \"react\";\n\nexport default value => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n};\n","import React, { useEffect } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\nimport { capFirst } from \"../utils/utils\";\n\nconst ChartTooltip = ({ ide, date, sunTimes }) => {\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  });\n\n  return (\n    <ReactTooltip\n      id={`tooltip-${ide}`}\n      type=\"light\"\n      className=\"tooltip-radial\"\n      getContent={dataTip => {\n        const selected = JSON.parse(dataTip);\n\n        if (selected) {\n          return (\n            <div style={{ textAlign: \"center\", width: \"140px\" }}>\n              <h5\n                className=\"bold pm hug\"\n                style={{ lineHeight: \"1.4em\", padding: \"0.8em 0 0.5em 0\" }}\n              >\n                <span\n                  style={{\n                    width: \"10px\",\n                    height: \"10px\",\n                    background: selected.data.color,\n                    content: \" \",\n                    display: \"inline-block\",\n                    borderRadius: \"50%\",\n                    marginRight: \".5em\"\n                  }}\n                ></span>\n                {selected.data.name}\n              </h5>\n\n              {/* Relative */}\n              <p\n                style={{\n                  lineHeight: \"1.2em\",\n                  paddingBottom: \"0.5em\"\n                }}\n                className=\"hug\"\n              >\n                {capFirst(\n                  moment(selected.from)\n                    .tz(sunTimes.tz)\n                    .from(moment(date).tz(sunTimes.tz))\n                )}\n              </p>\n              {/* From → to */}\n              <p style={{ lineHeight: \"1.2em\" }} className=\"hug1\">\n                {moment(selected.from)\n                  .tz(sunTimes.tz)\n                  .format(\"HH:mm\")}{\" \"}\n                <span className=\"op6\">→</span>{\" \"}\n                {moment(selected.to)\n                  .tz(sunTimes.tz)\n                  .format(\"HH:mm\")}\n              </p>\n\n              {/* Duration */}\n              <p\n                style={{\n                  lineHeight: \"1.2em\",\n                  paddingBottom: \"0.5em\"\n                }}\n                className=\"hug1 \"\n              >\n                Duration:{\" \"}\n                <strong>{moment.duration(selected.duration).humanize()}</strong>\n              </p>\n            </div>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default ChartTooltip;\n","export const getHoursMinutes = d => {\n  return d.getHours() + \":\" + d.getMinutes();\n};\n\nexport const getMonthsDays = d => {\n  return d.getMonth() + \"-\" + d.getDay();\n};\n\nexport const secondsToHours = sec => {\n  const seconds = Number(sec);\n  let h = Math.floor(seconds / 3600);\n  let m = Math.floor((seconds % 3600) / 60);\n  let s = Math.floor((seconds % 3600) % 60);\n\n  return `${h !== 0 ? `${h} h` : \"\"} ${m} min ${s} s`;\n};\n\nexport const capFirst = string =>\n  string.charAt(0).toUpperCase() + string.slice(1);\n\nexport const randomString = () => (Math.random() + 1).toString(36).substring(7);\n\nexport const dst = (year = new Date().getFullYear()) => {\n  //March\n  let summer = new Date(); //?\n  summer.setFullYear(year, 2, 31);\n  summer.setHours(2); //?\n  summer.setMinutes(0);\n  summer.setSeconds(0);\n  summer.setDate(summer.getDate() - summer.getDay()); //?\n\n  //October\n  let standard = new Date(); //?\n  standard.setFullYear(year, 9, 31); //?\n  standard.setHours(3); //?\n  standard.setMinutes(0);\n  standard.setSeconds(0);\n  standard.setDate(standard.getDate() - standard.getDay()); //?\n\n  return [summer, standard];\n};\n\nexport const getRandomInRange = (from, to, fixed) => {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nexport const getRandomCoords = (from = -180, to = 180, fixed = 3) => {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nexport const getRandomDate = (\n  start = new Date(),\n  end = new Date(2040, 0, 1)\n) => {\n  return new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  );\n};\n\nexport const getTimePercent = date => {\n  return ((date.getHours() * 60 + date.getMinutes()) * 100) / 1440;\n};\n","import React from \"react\";\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nconst Clock = ({ date, sunTimes, radar }) => {\n  return (\n    <div className=\"center\">\n      {/* Fecha */}\n      <p className=\"hug1 small\">\n        {date.tz(sunTimes.tz).format(\"dddd\")}\n        <br />\n        <span className=\"bold\">{date.tz(sunTimes.tz).format(\"MMM Do YY\")}</span>\n      </p>\n\n      {/* Clock */}\n      <h4\n        className=\"xlarge hug\"\n        style={{\n          display: \"inline-block\",\n          fontWeight: 600,\n          padding: \"0 0.5em 0 0.5em\"\n        }}\n      >\n        {\n          moment(date)\n            .tz(sunTimes.tz)\n            .format(\"HH\")\n            .split(\"/\")[0]\n        }\n        <span className=\"timeDots\">:</span>\n        {\n          moment(date)\n            .tz(sunTimes.tz)\n            .format(\"mm\")\n            .split(\"/\")[0]\n        }\n      </h4>\n      {/* CurrentPhase */}\n      <p\n        className=\"hug bold\"\n        style={{\n          color: sunTimes.currentPhase.data.bg,\n          paddingBottom: \".5em\",\n          margin: \"0 auto\",\n          maxWidth: radar && \"150px\",\n          height: radar && \"50px\"\n        }}\n      >\n        {sunTimes.currentPhase.data.name}\n      </p>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useMemo, Fragment } from \"react\";\nimport { Line, LinePath, Polygon } from \"@vx/shape\";\nimport polyfill from \"@juggle/resize-observer\";\nimport useMeasure from \"react-use-measure\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nimport ChartTooltip from \"./ChartTooltip\";\nimport Clock from \"./Clock\";\n\nimport { scaleTime } from \"d3-scale\";\n\nconst stroke = 45;\nconst marginTop = stroke + 20;\n\nconst Timeline = ({ ide = \"timeline\", height = 150, sunTimes, date }) => {\n  // Size Container\n  const [ref, bounds] = useMeasure({ scroll: true, polyfill });\n  // Scales\n  const hourScale = scaleTime()\n    .domain([\n      moment(sunTimes.start).tz(sunTimes.tz),\n      moment(sunTimes.end).tz(sunTimes.tz)\n    ])\n    .range([0, bounds.width]);\n\n  const horasScale = scaleTime()\n    .domain([\n      moment({\n        year: moment(sunTimes.start).year(),\n        month: moment(sunTimes.start).month(),\n        day: moment(sunTimes.start).date(),\n        hour: 0\n      }),\n      moment({\n        year: moment(sunTimes.end).year(),\n        month: moment(sunTimes.end).month(),\n        day: moment(sunTimes.end).date(),\n        hour: 23\n      })\n    ])\n    .range([0, bounds.width]);\n\n  const hours = useMemo(() => {\n    let items = [];\n    new Array(24).fill().forEach((acc, index) => {\n      items.push(\n        moment({\n          year: moment(sunTimes.start).year(),\n          month: moment(sunTimes.start).month(),\n          day: moment(sunTimes.start).date(),\n          hour: index\n        })\n      );\n    });\n    return items;\n  }, [sunTimes.start]);\n\n  // Render\n  return (\n    <div\n      ref={ref}\n      style={{ padding: \"0 0.5em 1em 0.5em\" }}\n      className=\"dayWrapper center\"\n    >\n      <ChartTooltip ide={ide} sunTimes={sunTimes} date={date} />\n\n      <Clock date={date} sunTimes={sunTimes} />\n\n      <svg\n        style={{\n          overflow: \"visible\"\n        }}\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={`0 0 ${bounds.width} ${height}`}\n      >\n        {/* PHASES */}\n        {sunTimes.phases.map((x, i) => {\n          return (\n            <Line\n              style={{ cursor: \"pointer\" }}\n              data-for={`tooltip-${ide}`}\n              data-tip={JSON.stringify(x)}\n              className={x.id}\n              key={`line${x.id}-${i}`}\n              id={x.id}\n              from={{ x: hourScale(x.from), y: marginTop + stroke / 2 }}\n              to={{\n                x: hourScale(x.to) + 1,\n                y: marginTop + stroke / 2\n              }}\n              stroke={x.data.color}\n              strokeWidth={stroke}\n            />\n          );\n        })}\n\n        {/* HOURS */}\n        <g>\n          {hours.map((hour, i) => {\n            return (\n              <Fragment key={`hour${i}`}>\n                <Line\n                  style={{ pointerEvents: \"none\" }}\n                  from={{\n                    x: horasScale(moment(hour).tz(sunTimes.tz)),\n                    y: marginTop\n                  }}\n                  to={{\n                    x: horasScale(moment(hour).tz(sunTimes.tz)),\n                    y: marginTop + stroke\n                  }}\n                  stroke={\"RGBA(105, 106, 207, 0.2)\"}\n                  strokeWidth={1}\n                />\n                <text\n                  x={horasScale(hour)}\n                  y={marginTop + stroke + 35}\n                  style={{\n                    fill: \"black\",\n                    fontSize: \"0.7em\",\n                    textAnchor: \"middle\"\n                  }}\n                >\n                  {moment(hour).hour() !== 0 && moment(hour).hour() % 2 === 0\n                    ? moment(hour).format(\"H\")\n                    : \"\"}\n                </text>\n              </Fragment>\n            );\n          })}\n        </g>\n\n        {/* NOW */}\n        <circle\n          style={{ pointerEvents: \"none\" }}\n          className=\"circleNow\"\n          cx={hourScale(moment(date).tz(sunTimes.tz))}\n          cy={marginTop + stroke / 2}\n          r={5}\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"4\"\n        />\n        <circle\n          style={{ pointerEvents: \"none\" }}\n          className=\"circle\"\n          cx={hourScale(moment(date).tz(sunTimes.tz))}\n          cy={marginTop + stroke / 2}\n          r={4}\n          fill=\"white\"\n          strokeWidth=\"4\"\n        />\n\n        {/* CONNECTOR */}\n        <LinePath\n          data={[\n            [bounds.width / 2, 0],\n            [bounds.width / 2, 30],\n            [hourScale(moment(date).tz(sunTimes.tz)), 30],\n            [\n              hourScale(moment(date).tz(sunTimes.tz)),\n              marginTop + stroke / 2 - 30\n            ]\n          ]}\n          stroke={\"RGBA(210, 211, 212, 1.00)\"}\n          strokeWidth={2}\n        />\n\n        <Polygon\n          sides={3}\n          size={6}\n          fill={\"RGBA(33, 38, 43, 1.00)\"}\n          rotate={-90}\n          center={{\n            x: hourScale(moment(date).tz(sunTimes.tz)),\n            y: marginTop + stroke / 2 - 34\n          }}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React, { useMemo } from \"react\";\nimport polyfill from \"@juggle/resize-observer\";\nimport useMeasure from \"react-use-measure\";\n\nimport { Group } from \"@vx/group\";\nimport { Arc } from \"@vx/shape\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nimport { scaleTime } from \"d3-scale\";\n\nimport ChartTooltip from \"./ChartTooltip\";\nimport Clock from \"./Clock\";\n\nexport default ({ ide = \"radar\", width = 500, sunTimes, date }) => {\n  // Container width\n  const [ref, bounds] = useMeasure({ scroll: true, polyfill });\n\n  const radius = 260;\n\n  // Scales\n  const hourScale = scaleTime()\n    .domain([\n      moment(sunTimes.start).tz(sunTimes.tz),\n      moment(sunTimes.end).tz(sunTimes.tz)\n    ])\n    .range([0, Math.PI * 2]);\n\n  // Utils\n\n  const hours = useMemo(() => {\n    let items = [];\n    new Array(24).fill().forEach((acc, index) => {\n      items.push(\n        moment({\n          year: moment(sunTimes.start).year(),\n          month: moment(sunTimes.start).month(),\n          day: moment(sunTimes.start).date(),\n          hour: index\n        })\n      );\n    });\n    return items;\n  }, [sunTimes.start]);\n\n  const reSize = fontSize => {\n    const s = (fontSize * width) / bounds.width;\n    return isFinite(s) ? s : 10;\n  };\n\n  const points = genPoints(hours.length, radius);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        position: \"relative\",\n        display: \"flex\",\n        maxWidth: \"600px\",\n        margin: \"0 auto\"\n      }}\n    >\n      <ChartTooltip ide={ide} sunTimes={sunTimes} date={date} />\n\n      <div\n        style={{\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0\n        }}\n      >\n        <Clock date={date} sunTimes={sunTimes} radar={true} />\n      </div>\n      <svg\n        style={{ overflow: \"visible\" }}\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={`0 0 ${width} ${width}`}\n      >\n        <Group top={width / 2} left={width / 2}>\n          {sunTimes.phases.map((x, i) => {\n            return (\n              <Arc\n                style={{ cursor: \"pointer\" }}\n                data-for={`tooltip-${ide}`}\n                data-tip={JSON.stringify(x)}\n                key={`arc${x.id}-${i}`}\n                className={x.id}\n                startAngle={hourScale(x.from)}\n                endAngle={hourScale(x.to)}\n                innerRadius={radius - 20}\n                outerRadius={radius - 80}\n                stroke={x.data.color}\n                fill={x.data.color}\n              />\n            );\n          })}\n\n          {/* SOLAR NOON */}\n          <Arc\n            style={{ pointerEvents: \"none\", mixBlendMode: \"multiply\" }}\n            key={`arcsolarNoon`}\n            className={`arcsolarNoon`}\n            startAngle={hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))}\n            endAngle={hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))}\n            innerRadius={radius - 20}\n            outerRadius={radius - 80}\n            fill={\"transparent\"}\n            stroke={\"orange\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeDasharray=\"0, 6\"\n            opacity=\"1\"\n          />\n\n          {bounds.width > 500 && (\n            <g>\n              <text\n                style={{\n                  fill: \"#0F1012\",\n                  textAnchor: \"middle\",\n                  dominantBaseline: \"central\",\n                  fontSize: reSize(13),\n                  pointerEvents: \"none\"\n                }}\n                x={\n                  Math.sin(\n                    hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))\n                  ) *\n                  (radius - 120)\n                }\n                y={\n                  -Math.cos(\n                    hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))\n                  ) *\n                  (radius - 120)\n                }\n              >\n                <tspan\n                  x={\n                    Math.sin(\n                      hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))\n                    ) *\n                    (radius - 120)\n                  }\n                  dy=\"0\"\n                >\n                  Solar\n                </tspan>\n                <tspan\n                  x={\n                    Math.sin(\n                      hourScale(moment(sunTimes.solarNoon).tz(sunTimes.tz))\n                    ) *\n                    (radius - 120)\n                  }\n                  dy=\"1.2em\"\n                >\n                  noon\n                </tspan>\n              </text>\n            </g>\n          )}\n\n          {/* NOW */}\n\n          <Arc\n            style={{ pointerEvents: \"none\" }}\n            key={`now`}\n            className={`now`}\n            startAngle={hourScale(moment(date).tz(sunTimes.tz))}\n            endAngle={hourScale(moment(date).tz(sunTimes.tz))}\n            innerRadius={radius - 20}\n            outerRadius={radius - 80}\n            fill={\"transparent\"}\n            stroke={\"white\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeDasharray=\"0, 6\"\n            opacity=\"1\"\n          />\n\n          <circle\n            style={{ pointerEvents: \"none\" }}\n            className=\"circleNow\"\n            cx={\n              Math.sin(hourScale(moment(date).tz(sunTimes.tz))) * (radius - 50)\n            }\n            cy={\n              -Math.cos(hourScale(moment(date).tz(sunTimes.tz))) * (radius - 50)\n            }\n            r={18}\n            fill=\"white\"\n            stroke=\"black\"\n            strokeWidth=\"4\"\n          />\n          <circle\n            style={{ pointerEvents: \"none\" }}\n            className=\"circle\"\n            cx={\n              Math.sin(hourScale(moment(date).tz(sunTimes.tz))) * (radius - 50)\n            }\n            cy={\n              -Math.cos(hourScale(moment(date).tz(sunTimes.tz))) * (radius - 50)\n            }\n            r={12}\n            fill=\"white\"\n            strokeWidth=\"4\"\n          />\n\n          {hours.map((hour, i) => {\n            return (\n              <text\n                key={`hour${i}`}\n                x={points[i].x}\n                y={points[i].y}\n                style={{\n                  fill: \"black\",\n                  textAnchor: \"middle\",\n                  dominantBaseline: \"central\",\n                  fontWeight: 400,\n                  opacity: 1,\n                  fontSize: reSize(14)\n                }}\n              >\n                {moment(hour).format(\"H\")}\n              </text>\n            );\n          })}\n        </Group>\n      </svg>\n    </div>\n  );\n};\n\nfunction genPoints(length, radius) {\n  const step = (Math.PI * 2) / length;\n  return [...Array(length)].map((_, i) => {\n    return {\n      x: Math.sin(i * step) * (radius + 10),\n      y: -Math.cos(i * step) * (radius + 10)\n    };\n  });\n}\n","import React from \"react\";\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nconst Info = ({ sunTimes, isTimeline, setIsTimeline, date }) => {\n  // Render\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        maxWidth: \"500px\",\n        margin: \"0 auto\"\n      }}\n    >\n      <div\n        className=\"center\"\n        style={{\n          fontSize: \"80%\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        {/* Time to sunrise / sunset */}\n        {sunTimes.daylength.next && (\n          <p className=\"large pm\">\n            {sunTimes.daylength.nextSun} until{\" \"}\n            <strong>{sunTimes.daylength.next}</strong>\n          </p>\n        )}\n\n        {/* Next phase start */}\n        {sunTimes.currentPhase.nextPhase && (\n          <p className=\"pm\">\n            <strong style={{ color: sunTimes.currentPhase.nextPhase.data.bg }}>\n              {sunTimes.currentPhase.nextPhase.data.name}\n            </strong>{\" \"}\n            {moment(sunTimes.currentPhase.nextPhase.from)\n              .tz(sunTimes.tz)\n              .from(moment(date).tz(sunTimes.tz))}\n          </p>\n        )}\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          padding: \"1em\",\n          position: \"relative\",\n          fontSize: \"80%\"\n        }}\n        className=\"infoWrapper center\"\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          {sunTimes.times\n            .filter(x => x.id === \"sunset\" || x.id === \"sunrise\")\n            .map(x => {\n              return (\n                <p className=\"pm\" key={`sunInfo${x.id}`}>\n                  <strong>{x.name}</strong> <br />\n                  {moment(x.date)\n                    .tz(sunTimes.tz)\n                    .format(\"HH:mm\")}\n                </p>\n              );\n            })}\n        </div>\n\n        <p className=\"pm\">\n          <strong>Daylength</strong> <br />\n          {sunTimes.daylength.duration}\n        </p>\n      </div>\n\n      {/* Button timeline */}\n      <div className=\"center\">\n        <button\n          className=\"pm small\"\n          style={{\n            padding: \"0.5em 0.7em 0.5em 0.7em\",\n            marginTop: \"1em\"\n          }}\n          onClick={() => setIsTimeline(!isTimeline)}\n        >\n          {isTimeline ? \"View clock\" : \"View timeline\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\n\nfunction Footer(props) {\n  return (\n    <div\n      className=\"max center\"\n      style={{ padding: \"5em 1em 5em 1em\", fontSize: \"60%\" }}\n    >\n      <p>\n        Sun calculations:\n        <a\n          href=\"https://github.com/janrg/MeeusSunMoon\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"MeeusSunMoon Github\"\n        >\n          <strong> MeeusSunMoon</strong> (Gina Häußge),{\" \"}\n        </a>\n        <a\n          href=\"https://github.com/mbostock/solar-calculator\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Solar Calculator Github\"\n        >\n          <strong> solar-calculator</strong> (Mike Bostock)\n        </a>\n      </p>\n\n      <p>\n        <a\n          href=\"https://twitter.com/infoiguacel\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"iguacel twitter\"\n        >\n          <strong> @infoiguacel</strong> {new Date().getFullYear()}\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nconst getRandomInt = (from = 1, to = 10, fixed = 0) => {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nexport const randomMomentDate = () => {\n  const year = 2020;\n  const month = String(getRandomInt(1, 6)).padStart(2, \"0\");\n  const day = String(getRandomInt(1, 26)).padStart(2, \"0\");\n  const random = `${year}-${month}-${day}T12:00:00`;\n  return moment(random).tz(\"Europe/Madrid\");\n};\n\nexport const getRandomLng = (from = -180, to = 180, fixed = 3) => {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nexport const getRandomLat = (from = -90, to = 90, fixed = 3) => {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nexport const getRandomCoords = () => {\n  return {\n    lat: getRandomLat(),\n    lng: getRandomLng()\n  };\n};\n","export const testCoords = {\n  cadiz: { lat: 36.5270612, lng: -6.2885962 },\n  pamplona: { lat: 42.81687, lng: -1.64323 },\n  nyc: { lat: 40.73061, lng: -73.935242 },\n  london: { lat: 51.509865, lng: -0.118092 },\n  oslo: { lat: 59.911491, lng: 10.757933 },\n  yuma: { lat: 32.698437, lng: -114.650398 },\n  rjukan: { lat: 59.8753, lng: 8.5765 },\n  jaca: { lat: 42.56898, lng: -0.54987 },\n  china: { lat: 35.86166, lng: 104.1953964 },\n  alaska: { lat: 71.290558, lng: -156.788605 }\n};\n","import moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\nimport tzlookup from \"tz-lookup\";\n\nexport const format = d => {\n  return moment(d).format(\"DD-MM-YY HH:mm\");\n};\n\nexport const getTz = (lat, lng) => {\n  return tzlookup(lat, lng);\n};\n\nexport const toHoursMinutes = date => {\n  const hours = moment.utc(date).format(\"H\");\n  const minutes = moment.utc(date).format(\"m\");\n\n  return `${\n    hours && hours !== \"0\" ? moment.utc(date).format(\"H\") + \"h \" : \" \"\n  }${minutes && minutes !== \"00\" ? moment.utc(date).format(\"m\") + \"m\" : \" \"}`;\n};\n","import React from \"react\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nconst Debug = ({ sunTimes }) => {\n  return (\n    <div>\n      <p className=\"bold\">sunTimes.phases</p>\n\n      <table style={{ width: \"100%\" }}>\n        <tbody>\n          {sunTimes.times.map(x => {\n            return (\n              <tr\n                key={`times${x.id}`}\n                style={{ fontWeight: x.id === \"sunrise\" ? 600 : 400 }}\n              >\n                <td>\n                  {moment(x.date)\n                    .tz(sunTimes.tz)\n                    .format(\"HH:mm\")}\n                </td>\n                <td colSpan=\"2\">{x.name}</td>\n              </tr>\n            );\n          })}\n\n          <tr>\n            <td>\n              {moment(sunTimes.solarNoon)\n                .tz(sunTimes.tz)\n                .format(\"D - HH:mm\")}\n            </td>\n            <td colSpan=\"2\">SolarNoon</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Debug;\n","import React from \"react\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nconst Debug = ({ sunTimes }) => {\n  return (\n    <div>\n      <p className=\"bold\">sunTimes.phases</p>\n      <p>{sunTimes.polarNight ? \"Polar night\" : \"\"}</p>\n      <p>{sunTimes.midnightSun ? \"Mindnight sun\" : \"\"}</p>\n\n      <table style={{ width: \"100%\" }}>\n        <tbody>\n          {sunTimes.phases.map(x => {\n            return (\n              <tr key={`times${x.id}`}>\n                <td>{x.data.name}</td>\n                <td>\n                  {moment(x.from)\n                    .tz(sunTimes.tz)\n                    .format(\"HH:mm\")}\n                </td>\n                <td>\n                  {moment(x.to)\n                    .tz(sunTimes.tz)\n                    .format(\"HH:mm\")}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Debug;\n","import React from \"react\";\nimport { randomMomentDate, getRandomCoords } from \"../utils/random\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\nimport { testCoords } from \"../utils/testCoords\";\n\nimport { format } from \"../utils/time\";\nimport { getTz } from \"../utils/time\";\n\nimport Debug from \"./Debug\";\nimport Debug2 from \"./Debug2\";\n\nconst DebugInfo = ({ setDate, setLocation, date, sunTimes, location }) => {\n  const handleSelect = event => {\n    const { value } = event.target;\n    setLocation({ ...testCoords[value] });\n  };\n\n  return (\n    <div className=\"max\" style={{ fontSize: \"70%\" }}>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingBottom: \"2em\"\n          }}\n        >\n          <p onClick={() => setDate(randomMomentDate)}>RandomDate</p>\n          <p onClick={() => setDate(moment())}>Today</p>\n          <p onClick={() => setLocation(getRandomCoords())}>RandomCoords</p>\n          {/* SELECT */}\n          <select onChange={handleSelect}>\n            {Object.entries(testCoords).map(([key, value]) => {\n              return (\n                <option key={`${key}-select`} value={key}>\n                  {key}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      <p className=\"bold\">MeeusSunMoon</p>\n\n      {/* TABLE */}\n      <table style={{ width: \"100%\" }}>\n        <tbody>\n          <tr>\n            <td>Date</td>\n            <td colSpan=\"2\">{format(moment(date).tz(sunTimes.tz))}</td>\n          </tr>\n          <tr>\n            <td>lat, lng</td>\n            <td>{location.lat}</td>\n            <td>{location.lng}</td>\n          </tr>\n          <tr>\n            <td>tzB</td>\n            <td colSpan=\"2\">{getTz(location.lat, location.lng)}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <Debug sunTimes={sunTimes} />\n      <Debug2 sunTimes={sunTimes} />\n    </div>\n  );\n};\n\nexport default DebugInfo;\n","const phasesId = {\n  main: \"RGBA(33, 38, 43, 1.00)\",\n  bg: \"RGBA(21, 26, 32, 1.00)\",\n  gray: \"RGBA(56, 66, 76, 1.00)\",\n  daylight: {\n    color: \"RGBA(246, 233, 129, 0.50)\",\n    id: \"daylight\",\n    name: \"Daylight\",\n    bg: \"RGBA(237, 181, 70, 1.00)\"\n  },\n  night: {\n    color: \"RGBA(47, 71, 118, 1.00)\",\n    id: \"night\",\n    name: \"Night\",\n    bg: \"RGBA(47, 71, 118, 1.00)\"\n  },\n  astronomical_twilight: {\n    color: \"RGBA(81, 108, 152, 1.00)\",\n    id: \"astronomical_twilight\",\n    name: \"Astronomical twilight\",\n    bg: \"RGBA(81, 108, 152, 1.00)\"\n  },\n  nautical_twilight: {\n    color: \"RGBA(148, 171, 200, 1.00)\",\n    id: \"nautical_twilight\",\n    name: \"Nautical twilight\",\n    bg: \"RGBA(148, 171, 200, 1.00)\"\n  },\n  civil_twilight: {\n    color: \"RGBA(207, 219, 232, 1.00)\",\n    id: \"civil_twilight\",\n    name: \"Civil twilight\",\n    bg: \"RGBA(148, 171, 200, 0.80)\"\n  }\n};\n\nexport default {\n  start_astronomicalDawn: { ...phasesId.night },\n  astronomicalDawn_nauticalDawn: { ...phasesId.astronomical_twilight },\n  nauticalDawn_civilDawn: { ...phasesId.nautical_twilight },\n  civilDawn_sunrise: { ...phasesId.civil_twilight },\n  sunrise_sunset: { ...phasesId.daylight },\n  sunset_civilDusk: { ...phasesId.civil_twilight },\n  civilDusk_nauticalDusk: { ...phasesId.nautical_twilight },\n  nauticalDusk_astronomicalDusk: { ...phasesId.astronomical_twilight },\n  astronomicalDusk_end: { ...phasesId.night },\n  unico_polarNight: { ...phasesId.night },\n  unico_midnightSun: { ...phasesId.daylight },\n  start_sunrise: { ...phasesId.civil_twilight },\n  sunset_end: { ...phasesId.civil_twilight },\n  start_civilDawn: { ...phasesId.nautical_twilight },\n  civilDusk_end: { ...phasesId.nautical_twilight },\n  start_nauticalDawn: { ...phasesId.astronomical_twilight },\n  nauticalDusk_end: { ...phasesId.astronomical_twilight },\n  astronomicalDawn_astronomicalDusk: { ...phasesId.astronomical_twilight },\n  nauticalDawn_nauticalDusk: { ...phasesId.nautical_twilight },\n  civilDawn_civilDusk: { ...phasesId.civil_twilight }\n};\n","import {\n  astronomicalDawn,\n  astronomicalDusk,\n  civilDawn,\n  civilDusk,\n  nauticalDawn,\n  nauticalDusk,\n  solarNoon,\n  sunrise,\n  sunset\n  // formatCI,\n  // options,\n  // yearMoonPhases\n} from \"meeussunmoon\";\n\nimport phaseData from \"./phaseData\";\n\nimport { toHoursMinutes } from \"./time\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nimport tzlookup from \"tz-lookup\";\n\nconst getDaylength = (date, location, tz, polarNight, midnightSun) => {\n  if (polarNight) {\n    return { duration: \"0 h (polar night)\", nextSun: \"\" };\n  }\n  if (midnightSun) {\n    return { duration: \"24 h (midnight sun)\", nextSun: \"\" };\n  }\n\n  const sunriseDate = {\n    id: \"sunrise\",\n    name: \"Sunrise\",\n    date: sunrise(moment(date).tz(tz), location.lat, location.lng)\n  };\n\n  const sunsetDate = {\n    id: \"sunset\",\n    name: \"Sunset\",\n    date: sunset(moment(date).tz(tz), location.lat, location.lng)\n  };\n\n  const next = [sunriseDate, sunsetDate].filter(x => {\n    return moment(x.date).isAfter(moment(date).tz(tz));\n  })[0];\n\n  const daylength = moment(sunsetDate.date)\n    .tz(tz)\n    .diff(moment(sunriseDate.date).tz(tz));\n\n  const nextDuration =\n    next &&\n    moment(moment(next.date))\n      .tz(tz)\n      .diff(moment(date).tz(tz));\n\n  return {\n    duration: toHoursMinutes(daylength),\n    next: next ? next.id : undefined,\n    nextSun: nextDuration ? toHoursMinutes(nextDuration) : undefined\n  };\n};\n\nconst getCurrentPhase = (phases, polarNight, midnightSun, date) => {\n  const currentPhaseIndex = phases.findIndex(x => x.currentPhase);\n\n  const currentPhase = phases[currentPhaseIndex];\n\n  const nextPhase =\n    currentPhaseIndex === phases.length - 1\n      ? false\n      : phases[currentPhaseIndex + 1];\n\n  if (polarNight || midnightSun) {\n    return {\n      ...currentPhase,\n      nextPhase,\n      name: polarNight ? \"Polar Night\" : \"Midnight Sun\"\n    };\n  } else {\n    return {\n      ...currentPhase,\n      nextPhase\n    };\n  }\n};\n\nconst getPhases = (times, tz, start, end, polarNight, midnightSun, date) => {\n  let phases = [];\n\n  if (times.length === 0) {\n    phases = [\n      {\n        id: `unico_${polarNight ? \"polarNight\" : \"midnightSun\"}`,\n        data: phaseData[`unico_${polarNight ? \"polarNight\" : \"midnightSun\"}`],\n        from: moment(start).tz(tz),\n        to: moment(end).tz(tz),\n        duration: moment.duration(\n          moment(end)\n            .tz(tz)\n            .diff(moment(start).tz(tz))\n        ),\n        currentPhase: true\n      }\n    ];\n  } else {\n    phases = times\n      .map((x, i) => {\n        if (i === 0) {\n          return {\n            id: `start_${x.id}`,\n            data: phaseData[`start_${x.id}`],\n            from: moment(start).tz(tz),\n            to: moment(x.date).tz(tz),\n            duration: moment.duration(\n              moment(times[times.length - 1].date)\n                .tz(tz)\n                .diff(moment(x.date).tz(tz))\n            ),\n            currentPhase: moment(moment(date).tz(tz)).isBetween(\n              moment(start).tz(tz),\n              moment(x.date).tz(tz)\n            )\n          };\n        }\n        return {\n          id: `${times[i - 1].id}_${x.id}`,\n          data: phaseData[`${times[i - 1].id}_${x.id}`],\n          from: moment(times[i - 1].date).tz(tz),\n          to: moment(x.date).tz(tz),\n          duration: moment.duration(\n            moment(x.date)\n              .tz(tz)\n              .diff(moment(times[i - 1].date).tz(tz))\n          ),\n          currentPhase: moment(moment(date).tz(tz)).isBetween(\n            moment(times[i - 1].date).tz(tz),\n            moment(x.date).tz(tz)\n          )\n        };\n      })\n      .concat([\n        {\n          id: `${times[times.length - 1].id}_end`,\n          data: phaseData[`${times[times.length - 1].id}_end`],\n          from: moment(times[times.length - 1].date).tz(tz),\n          to: moment(end).tz(tz),\n          duration: moment.duration(\n            moment(times[times.length - 1].date)\n              .tz(tz)\n              .diff(moment(times[0].date).tz(tz))\n          ),\n          currentPhase: moment(moment(date).tz(tz)).isBetween(\n            moment(times[times.length - 1].date).tz(tz),\n            moment(end).tz(tz)\n          )\n        }\n      ]);\n  }\n\n  return {\n    phases: phases,\n    currentPhase: getCurrentPhase(phases, polarNight, midnightSun, date)\n  };\n};\n\n//PN Polar night\n//NCD\n//NND\n//NAD\n\n//'--' for polar night and '**' midngight sun\n\nexport const getSunTimes = (date, location) => {\n  const tzB = tzlookup(location.lat, location.lng);\n  const sn = solarNoon(moment(date).tz(tzB), location.lng);\n\n  const tz = tzB;\n\n  const start = moment(date)\n    .tz(tzB)\n    .startOf(\"day\");\n  const end = moment(date)\n    .tz(tzB)\n    .endOf(\"day\");\n\n  const polarNight =\n    sunrise(moment(date).tz(tzB), location.lat, location.lng) === \"PN\" ||\n    sunset(moment(date).tz(tzB), location.lat, location.lng) === \"PN\"\n      ? true\n      : false;\n\n  const midnightSun =\n    sunrise(moment(date).tz(tzB), location.lat, location.lng) === \"MS\" ||\n    sunset(moment(date).tz(tzB), location.lat, location.lng) === \"MS\"\n      ? true\n      : false;\n\n  const times = [\n    {\n      id: \"sunrise\",\n      name: \"Sunrise\",\n      date: sunrise(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"sunset\",\n      name: \"Sunset\",\n      date: sunset(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"civilDawn\",\n      name: \"Civil Dawn\",\n      date: civilDawn(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"civilDusk\",\n      name: \"Civil Dusk\",\n      date: civilDusk(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"nauticalDawn\",\n      name: \"Nautical Dawn\",\n      date: nauticalDawn(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"nauticalDusk\",\n      name: \"Nautical Dusk\",\n      date: nauticalDusk(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"astronomicalDawn\",\n      name: \"Astronomical Dawn\",\n      date: astronomicalDawn(moment(date).tz(tzB), location.lat, location.lng)\n    },\n    {\n      id: \"astronomicalDusk\",\n      name: \"Astronomical Dusk\",\n      date: astronomicalDusk(moment(date).tz(tzB), location.lat, location.lng)\n    }\n  ];\n\n  const timesFiltered = times\n    .filter(x => moment(x.date).isValid())\n    .sort((a, b) =>\n      moment(a.date)\n        .tz(tzB)\n        .diff(moment(b.date))\n    );\n\n  return {\n    tz,\n    location,\n    date,\n    times: timesFiltered,\n    timesLength: timesFiltered.length,\n    polarNight,\n    midnightSun,\n    solarNoon: sn,\n    daylength: getDaylength(date, location, tz, polarNight, midnightSun),\n    start,\n    end,\n    ...getPhases(timesFiltered, tz, start, end, polarNight, midnightSun, date)\n  };\n};\n","import React, { useState } from \"react\";\nimport useInterval from \"./hooks/useInterval\";\n\nimport moment from \"moment-timezone/builds/moment-timezone-with-data-10-year-range\";\n\nimport Header from \"./components/Header\";\nimport Map from \"./components/Map\";\nimport Location from \"./components/Location\";\nimport Timeline from \"./components/Timeline\";\nimport Radar from \"./components/Radar\";\nimport SunInfo from \"./components/SunInfo\";\nimport Footer from \"./components/Footer\";\n\nimport DebugInfo from \"./components/DebugInfo\";\n\nimport \"./styles/App.css\";\n\nimport { getSunTimes } from \"./utils/getTimes\";\n\nconst debug = false;\n\nfunction App() {\n  const [date, setDate] = useState(moment());\n  const [location, setLocation] = useState({ lat: 36.52978, lng: -6.29465 });\n  const [isTimeline, setIsTimeline] = useState(true);\n\n  // Interval date for minutes\n  useInterval(() => {\n    setDate(\n      moment(date)\n        .tz(sunTimes.tz)\n        .add(1, \"minute\")\n    );\n  }, 60000);\n\n  const sunTimes = getSunTimes(date, location);\n  // console.log(sunTimes);\n\n  return (\n    <div className=\"App\">\n      <Header setLocation={setLocation} />\n      <Map location={location} setLocation={setLocation} />\n      <Location sunTimes={sunTimes} location={location} />\n\n      {isTimeline ? (\n        <Timeline sunTimes={sunTimes} date={date} />\n      ) : (\n        <Radar sunTimes={sunTimes} width={600} date={date} />\n      )}\n\n      {/* Debug */}\n      <SunInfo\n        sunTimes={sunTimes}\n        setDate={setDate}\n        isTimeline={isTimeline}\n        setIsTimeline={setIsTimeline}\n      />\n      {/* Debug */}\n      {debug && (\n        <DebugInfo\n          sunTimes={sunTimes}\n          setDate={setDate}\n          location={location}\n          setLocation={setLocation}\n        />\n      )}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/reset.css\";\nimport \"./styles/resetbuttons.css\";\nimport \"./styles/typebase.css\";\nimport \"./styles/App.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}